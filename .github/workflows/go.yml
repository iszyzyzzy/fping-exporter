name: Build and Release
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: Build and Release Go Project
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        include:
          - goos: windows
            goarch: amd64
            ext: .exe
          - goos: windows
            goarch: arm64
            ext: .exe
          - goos: darwin
            goarch: amd64
            ext: ''
          - goos: darwin
            goarch: arm64
            ext: ''
          - goos: linux
            goarch: amd64
            ext: ''
          - goos: linux
            goarch: arm64
            ext: ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'  # Specify Go version
      - name: Build binary
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o myapp-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
        env:
          GO111MODULE: on
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: fping-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
          path: fping-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            fping-*
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
